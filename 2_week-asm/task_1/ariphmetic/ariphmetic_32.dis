
ariphmetic:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   ebx
    1005:	83 ec 08             	sub    esp,0x8
    1008:	e8 83 00 00 00       	call   1090 <__x86.get_pc_thunk.bx>
    100d:	81 c3 cf 2f 00 00    	add    ebx,0x2fcf
    1013:	8b 83 18 00 00 00    	mov    eax,DWORD PTR [ebx+0x18]
    1019:	85 c0                	test   eax,eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   eax
    101f:	83 c4 08             	add    esp,0x8
    1022:	5b                   	pop    ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <__libc_start_main@plt-0x10>:
    1030:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1036:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    103c:	00 00                	add    BYTE PTR [eax],al
	...

00001040 <__libc_start_main@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    1046:	68 00 00 00 00       	push   0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <_init+0x30>

Disassembly of section .plt.got:

00001050 <__cxa_finalize@plt>:
    1050:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
    1056:	66 90                	xchg   ax,ax

Disassembly of section .text:

00001060 <_start>:
    1060:	f3 0f 1e fb          	endbr32 
    1064:	31 ed                	xor    ebp,ebp
    1066:	5e                   	pop    esi
    1067:	89 e1                	mov    ecx,esp
    1069:	83 e4 f0             	and    esp,0xfffffff0
    106c:	50                   	push   eax
    106d:	54                   	push   esp
    106e:	52                   	push   edx
    106f:	e8 18 00 00 00       	call   108c <_start+0x2c>
    1074:	81 c3 68 2f 00 00    	add    ebx,0x2f68
    107a:	6a 00                	push   0x0
    107c:	6a 00                	push   0x0
    107e:	51                   	push   ecx
    107f:	56                   	push   esi
    1080:	ff b3 1c 00 00 00    	push   DWORD PTR [ebx+0x1c]
    1086:	e8 b5 ff ff ff       	call   1040 <__libc_start_main@plt>
    108b:	f4                   	hlt    
    108c:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    108f:	c3                   	ret    

00001090 <__x86.get_pc_thunk.bx>:
    1090:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1093:	c3                   	ret    
    1094:	66 90                	xchg   ax,ax
    1096:	66 90                	xchg   ax,ax
    1098:	66 90                	xchg   ax,ax
    109a:	66 90                	xchg   ax,ax
    109c:	66 90                	xchg   ax,ax
    109e:	66 90                	xchg   ax,ax

000010a0 <deregister_tm_clones>:
    10a0:	e8 e4 00 00 00       	call   1189 <__x86.get_pc_thunk.dx>
    10a5:	81 c2 37 2f 00 00    	add    edx,0x2f37
    10ab:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
    10b1:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
    10b7:	39 c8                	cmp    eax,ecx
    10b9:	74 1d                	je     10d8 <deregister_tm_clones+0x38>
    10bb:	8b 82 10 00 00 00    	mov    eax,DWORD PTR [edx+0x10]
    10c1:	85 c0                	test   eax,eax
    10c3:	74 13                	je     10d8 <deregister_tm_clones+0x38>
    10c5:	55                   	push   ebp
    10c6:	89 e5                	mov    ebp,esp
    10c8:	83 ec 14             	sub    esp,0x14
    10cb:	51                   	push   ecx
    10cc:	ff d0                	call   eax
    10ce:	83 c4 10             	add    esp,0x10
    10d1:	c9                   	leave  
    10d2:	c3                   	ret    
    10d3:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    10d7:	90                   	nop
    10d8:	c3                   	ret    
    10d9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000010e0 <register_tm_clones>:
    10e0:	e8 a4 00 00 00       	call   1189 <__x86.get_pc_thunk.dx>
    10e5:	81 c2 f7 2e 00 00    	add    edx,0x2ef7
    10eb:	55                   	push   ebp
    10ec:	89 e5                	mov    ebp,esp
    10ee:	53                   	push   ebx
    10ef:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
    10f5:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
    10fb:	83 ec 04             	sub    esp,0x4
    10fe:	29 c8                	sub    eax,ecx
    1100:	89 c3                	mov    ebx,eax
    1102:	c1 e8 1f             	shr    eax,0x1f
    1105:	c1 fb 02             	sar    ebx,0x2
    1108:	01 d8                	add    eax,ebx
    110a:	d1 f8                	sar    eax,1
    110c:	74 14                	je     1122 <register_tm_clones+0x42>
    110e:	8b 92 20 00 00 00    	mov    edx,DWORD PTR [edx+0x20]
    1114:	85 d2                	test   edx,edx
    1116:	74 0a                	je     1122 <register_tm_clones+0x42>
    1118:	83 ec 08             	sub    esp,0x8
    111b:	50                   	push   eax
    111c:	51                   	push   ecx
    111d:	ff d2                	call   edx
    111f:	83 c4 10             	add    esp,0x10
    1122:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1125:	c9                   	leave  
    1126:	c3                   	ret    
    1127:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    112e:	66 90                	xchg   ax,ax

00001130 <__do_global_dtors_aux>:
    1130:	f3 0f 1e fb          	endbr32 
    1134:	55                   	push   ebp
    1135:	89 e5                	mov    ebp,esp
    1137:	53                   	push   ebx
    1138:	e8 53 ff ff ff       	call   1090 <__x86.get_pc_thunk.bx>
    113d:	81 c3 9f 2e 00 00    	add    ebx,0x2e9f
    1143:	83 ec 04             	sub    esp,0x4
    1146:	80 bb 2c 00 00 00 00 	cmp    BYTE PTR [ebx+0x2c],0x0
    114d:	75 27                	jne    1176 <__do_global_dtors_aux+0x46>
    114f:	8b 83 14 00 00 00    	mov    eax,DWORD PTR [ebx+0x14]
    1155:	85 c0                	test   eax,eax
    1157:	74 11                	je     116a <__do_global_dtors_aux+0x3a>
    1159:	83 ec 0c             	sub    esp,0xc
    115c:	ff b3 28 00 00 00    	push   DWORD PTR [ebx+0x28]
    1162:	e8 e9 fe ff ff       	call   1050 <__cxa_finalize@plt>
    1167:	83 c4 10             	add    esp,0x10
    116a:	e8 31 ff ff ff       	call   10a0 <deregister_tm_clones>
    116f:	c6 83 2c 00 00 00 01 	mov    BYTE PTR [ebx+0x2c],0x1
    1176:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1179:	c9                   	leave  
    117a:	c3                   	ret    
    117b:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    117f:	90                   	nop

00001180 <frame_dummy>:
    1180:	f3 0f 1e fb          	endbr32 
    1184:	e9 57 ff ff ff       	jmp    10e0 <register_tm_clones>

00001189 <__x86.get_pc_thunk.dx>:
    1189:	8b 14 24             	mov    edx,DWORD PTR [esp]
    118c:	c3                   	ret    

0000118d <main>:
    118d:	55                   	push   ebp
    118e:	89 e5                	mov    ebp,esp
    1190:	57                   	push   edi
    1191:	56                   	push   esi
    1192:	53                   	push   ebx
    1193:	83 e4 f8             	and    esp,0xfffffff8
    1196:	83 ec 40             	sub    esp,0x40
    1199:	e8 36 01 00 00       	call   12d4 <__x86.get_pc_thunk.ax>
    119e:	05 3e 2e 00 00       	add    eax,0x2e3e
    11a3:	c7 44 24 1c 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
    11aa:	00 
    11ab:	c7 44 24 20 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
    11b2:	00 
    11b3:	c7 44 24 24 00 00 00 	mov    DWORD PTR [esp+0x24],0x0
    11ba:	00 
    11bb:	c7 44 24 28 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
    11c2:	00 
    11c3:	c7 44 24 2c 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
    11ca:	00 
    11cb:	c7 44 24 30 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
    11d2:	00 
    11d3:	c7 44 24 34 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
    11da:	00 
    11db:	c7 44 24 38 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
    11e2:	00 
    11e3:	c7 44 24 3c 00 00 00 	mov    DWORD PTR [esp+0x3c],0x0
    11ea:	00 
    11eb:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
    11ef:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
    11f3:	01 d0                	add    eax,edx
    11f5:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
    11f9:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
    11fd:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
    1201:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
    1205:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
    1209:	01 c8                	add    eax,ecx
    120b:	11 da                	adc    edx,ebx
    120d:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
    1211:	89 54 24 3c          	mov    DWORD PTR [esp+0x3c],edx
    1215:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
    1219:	2b 44 24 20          	sub    eax,DWORD PTR [esp+0x20]
    121d:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
    1221:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
    1225:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
    1229:	2b 44 24 30          	sub    eax,DWORD PTR [esp+0x30]
    122d:	1b 54 24 34          	sbb    edx,DWORD PTR [esp+0x34]
    1231:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
    1235:	89 54 24 3c          	mov    DWORD PTR [esp+0x3c],edx
    1239:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
    123d:	23 44 24 20          	and    eax,DWORD PTR [esp+0x20]
    1241:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
    1245:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
    1249:	0b 44 24 20          	or     eax,DWORD PTR [esp+0x20]
    124d:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
    1251:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
    1255:	33 44 24 20          	xor    eax,DWORD PTR [esp+0x20]
    1259:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
    125d:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
    1261:	23 44 24 30          	and    eax,DWORD PTR [esp+0x30]
    1265:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
    1269:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
    126d:	23 44 24 34          	and    eax,DWORD PTR [esp+0x34]
    1271:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
    1275:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
    1279:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
    127d:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
    1281:	89 54 24 3c          	mov    DWORD PTR [esp+0x3c],edx
    1285:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
    1289:	0b 44 24 30          	or     eax,DWORD PTR [esp+0x30]
    128d:	89 04 24             	mov    DWORD PTR [esp],eax
    1290:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
    1294:	0b 44 24 34          	or     eax,DWORD PTR [esp+0x34]
    1298:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
    129c:	8b 04 24             	mov    eax,DWORD PTR [esp]
    129f:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
    12a3:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
    12a7:	89 54 24 3c          	mov    DWORD PTR [esp+0x3c],edx
    12ab:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
    12af:	33 44 24 30          	xor    eax,DWORD PTR [esp+0x30]
    12b3:	89 c6                	mov    esi,eax
    12b5:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
    12b9:	33 44 24 34          	xor    eax,DWORD PTR [esp+0x34]
    12bd:	89 c7                	mov    edi,eax
    12bf:	89 74 24 38          	mov    DWORD PTR [esp+0x38],esi
    12c3:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
    12c7:	b8 00 00 00 00       	mov    eax,0x0
    12cc:	8d 65 f4             	lea    esp,[ebp-0xc]
    12cf:	5b                   	pop    ebx
    12d0:	5e                   	pop    esi
    12d1:	5f                   	pop    edi
    12d2:	5d                   	pop    ebp
    12d3:	c3                   	ret    

000012d4 <__x86.get_pc_thunk.ax>:
    12d4:	8b 04 24             	mov    eax,DWORD PTR [esp]
    12d7:	c3                   	ret    

Disassembly of section .fini:

000012d8 <_fini>:
    12d8:	f3 0f 1e fb          	endbr32 
    12dc:	53                   	push   ebx
    12dd:	83 ec 08             	sub    esp,0x8
    12e0:	e8 ab fd ff ff       	call   1090 <__x86.get_pc_thunk.bx>
    12e5:	81 c3 f7 2c 00 00    	add    ebx,0x2cf7
    12eb:	83 c4 08             	add    esp,0x8
    12ee:	5b                   	pop    ebx
    12ef:	c3                   	ret    
Contents of the .eh_frame section (loaded from ariphmetic):


00000000 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -4
  Return address column: 8
  Augmentation data:     1b
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_offset: r8 (eip) at cfa-4
  DW_CFA_nop
  DW_CFA_nop

00000018 00000010 0000001c FDE cie=00000000 pc=00001060..00001090
  DW_CFA_advance_loc: 4 to 00001064
  DW_CFA_undefined: r8 (eip)

0000002c 00000020 00000030 FDE cie=00000000 pc=00001030..00001050
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 6 to 00001036
  DW_CFA_def_cfa_offset: 12
  DW_CFA_advance_loc: 10 to 00001040
  DW_CFA_def_cfa_expression (DW_OP_breg4 (esp): 4; DW_OP_breg8 (eip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit2; DW_OP_shl; DW_OP_plus)

00000050 00000010 00000054 FDE cie=00000000 pc=00001050..00001058
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000064 0000002c 00000068 FDE cie=00000000 pc=0000118d..000012d4
  DW_CFA_advance_loc: 1 to 0000118e
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r5 (ebp) at cfa-8
  DW_CFA_advance_loc: 2 to 00001190
  DW_CFA_def_cfa_register: r5 (ebp)
  DW_CFA_advance_loc: 9 to 00001199
  DW_CFA_offset: r7 (edi) at cfa-12
  DW_CFA_offset: r6 (esi) at cfa-16
  DW_CFA_offset: r3 (ebx) at cfa-20
  DW_CFA_advance_loc2: 311 to 000012d0
  DW_CFA_restore: r3 (ebx)
  DW_CFA_advance_loc: 1 to 000012d1
  DW_CFA_restore: r6 (esi)
  DW_CFA_advance_loc: 1 to 000012d2
  DW_CFA_restore: r7 (edi)
  DW_CFA_advance_loc: 1 to 000012d3
  DW_CFA_restore: r5 (ebp)
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000094 00000010 00000098 FDE cie=00000000 pc=000012d4..000012d8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000a8 ZERO terminator


