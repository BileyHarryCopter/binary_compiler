
sumarr:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   QWORD PTR [rip+0x2f82]        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f83]        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f7d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001080 <putchar@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f2d]        # 3fb8 <putchar@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001090 <puts@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f25]        # 3fc0 <puts@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010a0 <__stack_chk_fail@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f1d]        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    10ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f15]        # 3fd0 <printf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    ebp,ebp
    10c6:	49 89 d1             	mov    r9,rdx
    10c9:	5e                   	pop    rsi
    10ca:	48 89 e2             	mov    rdx,rsp
    10cd:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10d1:	50                   	push   rax
    10d2:	54                   	push   rsp
    10d3:	45 31 c0             	xor    r8d,r8d
    10d6:	31 c9                	xor    ecx,ecx
    10d8:	48 8d 3d ca 00 00 00 	lea    rdi,[rip+0xca]        # 11a9 <main>
    10df:	ff 15 f3 2e 00 00    	call   QWORD PTR [rip+0x2ef3]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10e5:	f4                   	hlt    
    10e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    10ed:	00 00 00 

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    rdi,[rip+0x2f19]        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    rax,[rip+0x2f12]        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    rax,rdi
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 d6 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ed6]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    110a:	48 85 c0             	test   rax,rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    rax
    1111:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    rdi,[rip+0x2ee9]        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    rsi,[rip+0x2ee2]        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    rsi,rdi
    1131:	48 89 f0             	mov    rax,rsi
    1134:	48 c1 ee 3f          	shr    rsi,0x3f
    1138:	48 c1 f8 03          	sar    rax,0x3
    113c:	48 01 c6             	add    rsi,rax
    113f:	48 d1 fe             	sar    rsi,1
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ea5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    114b:	48 85 c0             	test   rax,rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    rax
    1152:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmp    BYTE PTR [rip+0x2ea5],0x0        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   rbp
    116e:	48 83 3d 82 2e 00 00 	cmp    QWORD PTR [rip+0x2e82],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    rbp,rsp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e86]        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	mov    BYTE PTR [rip+0x2e7d],0x1        # 4010 <__TMC_END__>
    1193:	5d                   	pop    rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nop    DWORD PTR [rax]
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   rbp
    11ae:	48 89 e5             	mov    rbp,rsp
    11b1:	48 83 ec 70          	sub    rsp,0x70
    11b5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    11bc:	00 00 
    11be:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    11c2:	31 c0                	xor    eax,eax
    11c4:	c7 45 a0 0a 00 00 00 	mov    DWORD PTR [rbp-0x60],0xa
    11cb:	c7 45 a4 09 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x9
    11d2:	c7 45 a8 08 00 00 00 	mov    DWORD PTR [rbp-0x58],0x8
    11d9:	c7 45 ac 07 00 00 00 	mov    DWORD PTR [rbp-0x54],0x7
    11e0:	c7 45 b0 06 00 00 00 	mov    DWORD PTR [rbp-0x50],0x6
    11e7:	c7 45 b4 05 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x5
    11ee:	c7 45 b8 04 00 00 00 	mov    DWORD PTR [rbp-0x48],0x4
    11f5:	c7 45 bc 03 00 00 00 	mov    DWORD PTR [rbp-0x44],0x3
    11fc:	c7 45 c0 02 00 00 00 	mov    DWORD PTR [rbp-0x40],0x2
    1203:	c7 45 c4 01 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x1
    120a:	c7 45 d0 01 00 00 00 	mov    DWORD PTR [rbp-0x30],0x1
    1211:	c7 45 d4 02 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x2
    1218:	c7 45 d8 03 00 00 00 	mov    DWORD PTR [rbp-0x28],0x3
    121f:	c7 45 dc 04 00 00 00 	mov    DWORD PTR [rbp-0x24],0x4
    1226:	c7 45 e0 05 00 00 00 	mov    DWORD PTR [rbp-0x20],0x5
    122d:	c7 45 e4 06 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x6
    1234:	c7 45 e8 07 00 00 00 	mov    DWORD PTR [rbp-0x18],0x7
    123b:	c7 45 ec 08 00 00 00 	mov    DWORD PTR [rbp-0x14],0x8
    1242:	c7 45 f0 09 00 00 00 	mov    DWORD PTR [rbp-0x10],0x9
    1249:	c7 45 f4 0a 00 00 00 	mov    DWORD PTR [rbp-0xc],0xa
    1250:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    1254:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    1258:	ba 0a 00 00 00       	mov    edx,0xa
    125d:	48 89 ce             	mov    rsi,rcx
    1260:	48 89 c7             	mov    rdi,rax
    1263:	e8 8e 00 00 00       	call   12f6 <sumarr>
    1268:	83 f8 ff             	cmp    eax,0xffffffff
    126b:	75 0f                	jne    127c <main+0xd3>
    126d:	48 8d 05 90 0d 00 00 	lea    rax,[rip+0xd90]        # 2004 <_IO_stdin_used+0x4>
    1274:	48 89 c7             	mov    rdi,rax
    1277:	e8 14 fe ff ff       	call   1090 <puts@plt>
    127c:	48 8d 05 9a 0d 00 00 	lea    rax,[rip+0xd9a]        # 201d <_IO_stdin_used+0x1d>
    1283:	48 89 c7             	mov    rdi,rax
    1286:	e8 05 fe ff ff       	call   1090 <puts@plt>
    128b:	48 8d 05 a0 0d 00 00 	lea    rax,[rip+0xda0]        # 2032 <_IO_stdin_used+0x32>
    1292:	48 89 c7             	mov    rdi,rax
    1295:	b8 00 00 00 00       	mov    eax,0x0
    129a:	e8 11 fe ff ff       	call   10b0 <printf@plt>
    129f:	c7 45 9c 00 00 00 00 	mov    DWORD PTR [rbp-0x64],0x0
    12a6:	eb 23                	jmp    12cb <main+0x122>
    12a8:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    12ab:	48 98                	cdqe   
    12ad:	8b 44 85 a0          	mov    eax,DWORD PTR [rbp+rax*4-0x60]
    12b1:	89 c6                	mov    esi,eax
    12b3:	48 8d 05 80 0d 00 00 	lea    rax,[rip+0xd80]        # 203a <_IO_stdin_used+0x3a>
    12ba:	48 89 c7             	mov    rdi,rax
    12bd:	b8 00 00 00 00       	mov    eax,0x0
    12c2:	e8 e9 fd ff ff       	call   10b0 <printf@plt>
    12c7:	83 45 9c 01          	add    DWORD PTR [rbp-0x64],0x1
    12cb:	83 7d 9c 09          	cmp    DWORD PTR [rbp-0x64],0x9
    12cf:	7e d7                	jle    12a8 <main+0xff>
    12d1:	bf 0a 00 00 00       	mov    edi,0xa
    12d6:	e8 a5 fd ff ff       	call   1080 <putchar@plt>
    12db:	b8 00 00 00 00       	mov    eax,0x0
    12e0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    12e4:	64 48 2b 14 25 28 00 	sub    rdx,QWORD PTR fs:0x28
    12eb:	00 00 
    12ed:	74 05                	je     12f4 <main+0x14b>
    12ef:	e8 ac fd ff ff       	call   10a0 <__stack_chk_fail@plt>
    12f4:	c9                   	leave  
    12f5:	c3                   	ret    

00000000000012f6 <sumarr>:
    12f6:	f3 0f 1e fa          	endbr64 
    12fa:	55                   	push   rbp
    12fb:	48 89 e5             	mov    rbp,rsp
    12fe:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1302:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    1306:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
    1309:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
    130d:	75 0a                	jne    1319 <sumarr+0x23>
    130f:	b8 ff ff ff ff       	mov    eax,0xffffffff
    1314:	e9 8e 00 00 00       	jmp    13a7 <sumarr+0xb1>
    1319:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    1320:	eb 48                	jmp    136a <sumarr+0x74>
    1322:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1325:	48 98                	cdqe   
    1327:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    132e:	00 
    132f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1333:	48 01 d0             	add    rax,rdx
    1336:	8b 08                	mov    ecx,DWORD PTR [rax]
    1338:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    133b:	48 98                	cdqe   
    133d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    1344:	00 
    1345:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    1349:	48 01 d0             	add    rax,rdx
    134c:	8b 10                	mov    edx,DWORD PTR [rax]
    134e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1351:	48 98                	cdqe   
    1353:	48 8d 34 85 00 00 00 	lea    rsi,[rax*4+0x0]
    135a:	00 
    135b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    135f:	48 01 f0             	add    rax,rsi
    1362:	01 ca                	add    edx,ecx
    1364:	89 10                	mov    DWORD PTR [rax],edx
    1366:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    136a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    136d:	39 45 dc             	cmp    DWORD PTR [rbp-0x24],eax
    1370:	76 30                	jbe    13a2 <sumarr+0xac>
    1372:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1375:	48 98                	cdqe   
    1377:	48 c1 e0 04          	shl    rax,0x4
    137b:	48 89 c2             	mov    rdx,rax
    137e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1382:	48 01 d0             	add    rax,rdx
    1385:	48 85 c0             	test   rax,rax
    1388:	74 18                	je     13a2 <sumarr+0xac>
    138a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    138d:	48 98                	cdqe   
    138f:	48 c1 e0 04          	shl    rax,0x4
    1393:	48 89 c2             	mov    rdx,rax
    1396:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    139a:	48 01 d0             	add    rax,rdx
    139d:	48 85 c0             	test   rax,rax
    13a0:	75 80                	jne    1322 <sumarr+0x2c>
    13a2:	b8 00 00 00 00       	mov    eax,0x0
    13a7:	5d                   	pop    rbp
    13a8:	c3                   	ret    

Disassembly of section .fini:

00000000000013ac <_fini>:
    13ac:	f3 0f 1e fa          	endbr64 
    13b0:	48 83 ec 08          	sub    rsp,0x8
    13b4:	48 83 c4 08          	add    rsp,0x8
    13b8:	c3                   	ret    
Contents of the .eh_frame section (loaded from sumarr):


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000018 0000000000000014 0000001c FDE cie=00000000 pc=00000000000010c0..00000000000010e6
  DW_CFA_advance_loc: 4 to 00000000000010c4
  DW_CFA_undefined: r16 (rip)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000024 00000034 FDE cie=00000000 pc=0000000000001020..0000000000001070
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000001026
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000001030
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit10; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000058 0000000000000014 0000005c FDE cie=00000000 pc=0000000000001070..0000000000001080
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000074 FDE cie=00000000 pc=0000000000001080..00000000000010c0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 000000000000001c 0000008c FDE cie=00000000 pc=00000000000011a9..00000000000012f6
  DW_CFA_advance_loc: 5 to 00000000000011ae
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000000011b1
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc2: 324 to 00000000000012f5
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop

000000a8 000000000000001c 000000ac FDE cie=00000000 pc=00000000000012f6..00000000000013a9
  DW_CFA_advance_loc: 5 to 00000000000012fb
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000000012fe
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 170 to 00000000000013a8
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop

000000c8 ZERO terminator


